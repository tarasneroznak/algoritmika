def knapsack_problem(w, s, c):
    n = len(w)
    m = [[0] * (c + 1) for _ in range(n)]

    for i in range(n):
        for j in range(c + 1):
            if (j >= w[i]):
                m[i][j] = max(
                    m[i - 1][j],
                    m[i - 1][j - w[i]] + s[i]
                )
            else:
                m[i][j] = m[i - 1][j]

    for i in range(n):
        print(m[i])


knapsack_problem(
    [0, 7, 3, 1, 5, 4],
    [0, 10, 4, 2, 6, 7],
    12
)

"""
[0, 0, 0, 0, 0, 0, 0,  0,  0,  0,  0,  0,  0]
[0, 0, 0, 0, 0, 0, 0, 10, 10, 10, 10, 10, 10]
[0, 0, 0, 4, 4, 4, 4, 10, 10, 10, 14, 14, 14]
[0, 2, 2, 4, 6, 6, 6, 10, 12, 12, 14, 16, 16]
[0, 2, 2, 4, 6, 6, 8, 10, 12, 12, 14, 16, 16]
[0, 2, 2, 4, 7, 9, 9, 11, 13, 13, 15, 17, 19]
"""
